# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI for Angular

on:
  pull_request:
    branches: [master]

env: # environment variables to all the jobs
  KEY_1: value1
  KEY_2: value2

jobs:
  build:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [12.16.1]

    steps:
      - uses: actions/checkout@v1

      - name: Print a greeting
        env: # environment variables to only this steps
          MY_VAR: Welcome to my C.I process
          FIRST_NAME: Tejas
          MIDDLE_NAME: Shailesh
          LAST_NAME: Sabunkar
        run: |
          echo $MY_VAR $FIRST_NAME $MIDDLE_NAME $LAST_NAME.

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Node version ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Installing all npm dependencies of specific versions using ci
        run: npm ci

      - name: Checking for Linting..
        run: npm run lint

      - name: Checking for build prod and AOT..
        run: npm run build

      - name: Let me check your test cases..
        run: npm run test-headless-chrome

    env: # environment variables to all the steps
      KEY_3: value3
